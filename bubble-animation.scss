/* Put here animation specific styles */
$orange: #FF5F19;
$orange-alt: #FA8E6A;
$white: #FFFFFF;

.bubble-animation {
	height: 300px;
	position: relative;
}

.bubble {
	display: inline-block;
	width: 15px;
	height: 15px;
	border-radius: 50%;
	background-color: rgba(lighten($orange, 10%), .8);
	position: absolute;
	bottom: 0;
}

@function calculate-distance($anim-step, $length){
	// We need to calculate the exact distance a bubble should be at every given keyframe
	// $anim-step : 100 = x : $length
	@return $anim-step * $length / 100;
}

@mixin generate-keyframe( $config-map ) {
	// Get configuration variables
	$anim-name:  map-get($config-map, 'name');
	$length: map-get($config-map, 'length');
	$steps: map-get($config-map, 'steps');
	$sway: map-get($config-map, 'sway');
	// Create the keyframes
	@keyframes $anim-name {
		$steps-length: length($steps);
		// Loop through all steps and get them. We need them in order to calculate the correct translateY distance.
		@for $i from 1 through $steps-length {
			$this-step: nth($steps, $i);
			$distance: calculate-distance($this-step, $length);
			// This is the sway factor. By multiplying it by -1 on each loop execution we are able to sway the bubble from left to right.
			$sway: $sway * -1;
			@if $i == 1 {
				#{$this-step}% { transform: translate(#{$sway}px, -#{$distance})  scale(.7); opacity: 0; }
			} @else if $steps-length - $i >= 1 { // The bubble is just moving up
				#{$this-step}% { transform: translate(#{$sway}px, -#{$distance})  scale(1); opacity: 1; }
			} @else { // Last keyframe: burst the thing!
				#{$this-step}% { transform: translate(#{$sway}px, -#{$distance}) scale(2.5); opacity: 0; }
			}
		}
	}
}

// This list contains the configuration maps that will be used to generate the keyframes. Beware: Quotes should not surround names otherwise Sass will output them in the css file and Firefox does not read animation names with quotes. It looks a little crazy looking at the maps there with string not surrounded by quotes, but it looks like Sass is handling this stuff pretty neatly, so.
$configs: (
	(
		name: bubble-burst-1,
		length: 100px,
		steps: 0 25 50 75 94 100,
		sway: 2
	),
	(
		name: bubble-burst-2,
		length: 180px,
		steps: 0 25 50 75 94 100,
		sway: -3
	),
	(
		name: bubble-burst-3,
		length: 250px,
		steps: 0 25 50 75 94 100,
		sway: 4
	)
);

// Loop through the configuration list and generate appropriate keyframes and classes.
@for $i from 1 through length($configs) {
	@include generate-keyframe( nth($configs, $i) );
	.bubble-burst-#{$i} {
		animation: bubble-burst-#{$i} #{$i + .2}s linear;
		animation-fill-mode: both;
	}
}
